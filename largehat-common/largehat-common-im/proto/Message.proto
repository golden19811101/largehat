syntax = "proto3";
package com.largehat.common.im.packets;
import "Chat.proto";
import "User.proto";
import "Content.proto";
option optimize_for = SPEED;
option java_package="com.largehat.common.im.packets";
option java_outer_classname = "MessageProto";

//注册模型
message Message {
    int32 version = 1; //协议版本号
    Command command = 2; //命令号
    int32 synSeq = 3; //同步序列号0MMDD99999确保唯一

    oneof pack {
        AuthReq authReq = 4;
        LoginReq loginReq = 5;
        MessageReq messageReq = 6;
        GroupReq groupReq = 7;
        UserReq userReq = 8;
        CancelMsgReq cancelMsgReq = 9;
        GroupNoticeReq groupNoticeReq = 10;
        UserNoticeReq UserNoticeReq = 11;
        BodyRes bodyRes  = 12;
        AuthRes authRes = 13;
        LoginRes loginRes = 14;
    }
}

//鉴权请求
message AuthReq {
    string authCode = 1; //鉴权码
    string userId = 2; //用户ID
    string passwd = 3; //用户密码
    int32 orgId = 4; //组织机构代码
}

//登录请求
message LoginReq {
    string tonken = 1; //令牌
    string userId = 2; //用户ID
    DeviceType deviceType = 3; //设备类型
    string deviceId = 4; //设备唯一标志
}

//消息请求
message MessageReq {
    string messageId = 1; //消息编号
    User from = 2; //发送者
    string to = 3; //接受着
    int64 groupId = 4; //接受群组

    MsgType msgType = 5; //消息类型
    ChatType chatType = 6; //公聊、私聊
    Content content = 7; //消息内容
    int64 sendTime = 8; //发送时间
}

//加入群组请求
message GroupReq {
    string userId = 1; //加入群组用户
    uint32 type = 2; //返回信息 0加入群组，1退出群组
    string groupId = 3; //加入群组编号
    string note = 4; //备注
}

//加好友请求
message UserReq {
    string userId = 1; //请求的用户
    uint32 type = 2; //返回信息 0添加好友，1加入黑名单， 2取消好友， 3取消黑名单
    string toUserId = 3; //要添加的好友,要加入黑名单的用户
    string note = 4; //备注
}

//消息撤回请求
message CancelMsgReq {
    string userId = 1;    //用户
    string groupId = 2;   //撤销群组
    string messageId = 3; //消息编码
}

//群组通知
message GroupNoticeReq {
    GroupNoticeType groupNoticeType = 1; //群组通知  分享， 跟投， 红包
    string groupId = 2;   //通知的群组
    User user = 3; //加入退出群组用户，分享的用户
    string noticeContent = 4;   //json数据包
}

//用户通知
message UserNoticeReq {
    UserNoticeType userNoticeType = 1; //用户通知
    string noticeUserId = 2;   //通知用户
    User user = 3; //上线或下线的用户
    string noticeContent = 4;   //json数据包
}

//返回包
message BodyRes {
    uint32 code = 1; //返回信息 0成功1失败
    string msg = 2; //消息
}

//鉴权返回
message AuthRes {
    uint32 code = 1; //返回信息 0成功1失败
    string msg = 2; //消息
    string tonken = 3; //令牌
}

//登录返回
message LoginRes {
    uint32 code = 1; //返回信息 0成功1失败
    string msg = 2; //消息
    string tonken = 3; //令牌
    User user = 4; //用户信息
}