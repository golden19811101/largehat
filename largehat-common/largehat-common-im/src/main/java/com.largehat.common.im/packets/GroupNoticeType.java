// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Chat.proto

package com.largehat.common.im.packets;

/**
 * <pre>
 *群通知类型
 * </pre>
 *
 * Protobuf enum {@code GroupNoticeType}
 */
public enum GroupNoticeType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   *用户进入
   * </pre>
   *
   * <code>GROUP_NOTICE_TYPE_JOIN = 0;</code>
   */
  GROUP_NOTICE_TYPE_JOIN(0),
  /**
   * <pre>
   *用户退出
   * </pre>
   *
   * <code>GROUP_NOTICE_TYPE_EXIT = 1;</code>
   */
  GROUP_NOTICE_TYPE_EXIT(1),
  /**
   * <pre>
   *群组分享
   * </pre>
   *
   * <code>GROUP_NOTICE_TYPE_SHARE = 2;</code>
   */
  GROUP_NOTICE_TYPE_SHARE(2),
  /**
   * <pre>
   *群组跟投
   * </pre>
   *
   * <code>GROUP_NOTICE_TYPE_BET = 3;</code>
   */
  GROUP_NOTICE_TYPE_BET(3),
  /**
   * <pre>
   *群组红包
   * </pre>
   *
   * <code>GROUP_NOTICE_TYPE_REDPACKAGE = 4;</code>
   */
  GROUP_NOTICE_TYPE_REDPACKAGE(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   *用户进入
   * </pre>
   *
   * <code>GROUP_NOTICE_TYPE_JOIN = 0;</code>
   */
  public static final int GROUP_NOTICE_TYPE_JOIN_VALUE = 0;
  /**
   * <pre>
   *用户退出
   * </pre>
   *
   * <code>GROUP_NOTICE_TYPE_EXIT = 1;</code>
   */
  public static final int GROUP_NOTICE_TYPE_EXIT_VALUE = 1;
  /**
   * <pre>
   *群组分享
   * </pre>
   *
   * <code>GROUP_NOTICE_TYPE_SHARE = 2;</code>
   */
  public static final int GROUP_NOTICE_TYPE_SHARE_VALUE = 2;
  /**
   * <pre>
   *群组跟投
   * </pre>
   *
   * <code>GROUP_NOTICE_TYPE_BET = 3;</code>
   */
  public static final int GROUP_NOTICE_TYPE_BET_VALUE = 3;
  /**
   * <pre>
   *群组红包
   * </pre>
   *
   * <code>GROUP_NOTICE_TYPE_REDPACKAGE = 4;</code>
   */
  public static final int GROUP_NOTICE_TYPE_REDPACKAGE_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @Deprecated
  public static GroupNoticeType valueOf(int value) {
    return forNumber(value);
  }

  public static GroupNoticeType forNumber(int value) {
    switch (value) {
      case 0: return GROUP_NOTICE_TYPE_JOIN;
      case 1: return GROUP_NOTICE_TYPE_EXIT;
      case 2: return GROUP_NOTICE_TYPE_SHARE;
      case 3: return GROUP_NOTICE_TYPE_BET;
      case 4: return GROUP_NOTICE_TYPE_REDPACKAGE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<GroupNoticeType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      GroupNoticeType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<GroupNoticeType>() {
          public GroupNoticeType findValueByNumber(int number) {
            return GroupNoticeType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return Chat.getDescriptor()
        .getEnumTypes().get(8);
  }

  private static final GroupNoticeType[] VALUES = values();

  public static GroupNoticeType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private GroupNoticeType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:GroupNoticeType)
}

